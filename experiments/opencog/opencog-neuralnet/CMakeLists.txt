# ===================================================================
# Build system settings

CMAKE_MINIMUM_REQUIRED(VERSION 3.5)

PROJECT(opencog-neuralnet VERSION 0.0.1)

INCLUDE(GNUInstallDirs)

# set default build type
IF (CMAKE_BUILD_TYPE STREQUAL "")
	SET(CMAKE_BUILD_TYPE Release)
ENDIF (CMAKE_BUILD_TYPE STREQUAL "")

# DATADIR is required by OpenCogMacros.cmake
IF (NOT DEFINED DATADIR)
	SET (DATADIR "${CMAKE_INSTALL_PREFIX}/share/opencog")
ENDIF (NOT DEFINED DATADIR)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
# autogenerated headers (like neuralnet_atom_types.h) is written to the build directory
INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR})

# ===================================================================
# Dependencies

FIND_PACKAGE(CogUtil 2.0.3 CONFIG REQUIRED)
LIST(APPEND CMAKE_MODULE_PATH ${COGUTIL_DATA_DIR}/cmake)
INCLUDE(OpenCogGccOptions)
INCLUDE(AddCxxtest)
INCLUDE(Summary)

FIND_PACKAGE(AtomSpace 5.0.4 CONFIG REQUIRED)
LIST(APPEND CMAKE_MODULE_PATH ${ATOMSPACE_DATA_DIR}/cmake)
INCLUDE(OpenCogMacros)

FIND_PACKAGE(Python3Interp 3.5 REQUIRED)
FIND_PACKAGE(PythonLibs 3.5 REQUIRED)
FIND_PACKAGE(Cython 0.23 REQUIRED)

FIND_PACKAGE(Cxxtest)
FIND_PROGRAM(NOSETESTS_EXECUTABLE nosetests3)
IF (NOSETESTS_EXECUTABLE)
	SET(NOSETESTS_FOUND 1)
	MESSAGE(STATUS "Using nosetests executable " ${NOSETESTS_EXECUTABLE})
ENDIF (NOSETESTS_EXECUTABLE)

# ===================================================================
# Build subdirectories

ADD_SUBDIRECTORY(opencog)
ADD_SUBDIRECTORY(cython)

# TODO: replace by include from cogutil
ADD_CUSTOM_TARGET(tests)
ADD_SUBDIRECTORY(tests EXCLUDE_FROM_ALL)
# requried to allow redefining "test" goal
IF(CMAKE_VERSION VERSION_GREATER 3.0.2)
	CMAKE_POLICY(SET CMP0037 OLD)
ENDIF(CMAKE_VERSION VERSION_GREATER 3.0.2)
ADD_CUSTOM_TARGET(test
	DEPENDS tests
	WORKING_DIRECTORY tests
	COMMAND ${CMAKE_CTEST_COMMAND} --force-new-ctest-process --output-on-failure $(ARGS)
	COMMENT "Running tests..."
)

# ===================================================================
# Show a summary of what we found, what we will do.

SUMMARY_ADD("CogUtil" "OpenCog utilities" COGUTIL_FOUND)
SUMMARY_ADD("AtomSpace" "Base atoms definitions" ATOMSPACE_FOUND)
SUMMARY_ADD("PythonInterp" "Python intepreter" PYTHON3INTERP_FOUND)
SUMMARY_ADD("PythonLibs" "Python libraries" PYTHONLIBS_FOUND)
SUMMARY_ADD("Cython" "Cython (python) bindings" CYTHON_FOUND)
SUMMARY_ADD("Cxxtest" "C++ unit testing" CXXTEST_FOUND)
SUMMARY_ADD("Nosetests" "Python unit test runner" NOSETESTS_FOUND)

SUMMARY_SHOW()
